// This file was generated by counterfeiter
package dbfakes

import (
	"sync"

	"code.cloudfoundry.org/lager"
	"github.com/concourse/atc/db"
)

type FakeLeaseFactory struct {
	NewLeaseStub        func(logger lager.Logger, lockID int) db.Lease
	newLeaseMutex       sync.RWMutex
	newLeaseArgsForCall []struct {
		logger lager.Logger
		lockID int
	}
	newLeaseReturns struct {
		result1 db.Lease
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeLeaseFactory) NewLease(logger lager.Logger, lockID int) db.Lease {
	fake.newLeaseMutex.Lock()
	fake.newLeaseArgsForCall = append(fake.newLeaseArgsForCall, struct {
		logger lager.Logger
		lockID int
	}{logger, lockID})
	fake.recordInvocation("NewLease", []interface{}{logger, lockID})
	fake.newLeaseMutex.Unlock()
	if fake.NewLeaseStub != nil {
		return fake.NewLeaseStub(logger, lockID)
	} else {
		return fake.newLeaseReturns.result1
	}
}

func (fake *FakeLeaseFactory) NewLeaseCallCount() int {
	fake.newLeaseMutex.RLock()
	defer fake.newLeaseMutex.RUnlock()
	return len(fake.newLeaseArgsForCall)
}

func (fake *FakeLeaseFactory) NewLeaseArgsForCall(i int) (lager.Logger, int) {
	fake.newLeaseMutex.RLock()
	defer fake.newLeaseMutex.RUnlock()
	return fake.newLeaseArgsForCall[i].logger, fake.newLeaseArgsForCall[i].lockID
}

func (fake *FakeLeaseFactory) NewLeaseReturns(result1 db.Lease) {
	fake.NewLeaseStub = nil
	fake.newLeaseReturns = struct {
		result1 db.Lease
	}{result1}
}

func (fake *FakeLeaseFactory) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.newLeaseMutex.RLock()
	defer fake.newLeaseMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeLeaseFactory) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ db.LeaseFactory = new(FakeLeaseFactory)
